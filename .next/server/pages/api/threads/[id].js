"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/threads/[id]";
exports.ids = ["pages/api/threads/[id]"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = import("axios");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fthreads%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cthreads%5C%5Bid%5D.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fthreads%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cthreads%5C%5Bid%5D.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\threads\\[id].js */ \"(api)/./pages/api/threads/[id].js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/threads/[id]\",\n        pathname: \"/api/threads/[id]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_threads_id_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnRocmVhZHMlMkYlNUJpZCU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdGhyZWFkcyU1QyU1QmlkJTVELmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzJEO0FBQzNEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxxREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMscURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vNWNoLz8xMDY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcdGhyZWFkc1xcXFxbaWRdLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdGhyZWFkcy9baWRdXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdGhyZWFkcy9baWRdXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fthreads%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cthreads%5C%5Bid%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/dataStore.js":
/*!**************************!*\
  !*** ./lib/dataStore.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPost: () => (/* binding */ addPost),\n/* harmony export */   addThread: () => (/* binding */ addThread),\n/* harmony export */   debugDataStore: () => (/* binding */ debugDataStore),\n/* harmony export */   postsStore: () => (/* binding */ postsStore),\n/* harmony export */   threadsStore: () => (/* binding */ threadsStore)\n/* harmony export */ });\n/**\r\n * サーバーサイドで共有するデータストア\r\n * Next.jsの開発サーバーでAPIエンドポイント間でデータを共有するために使用\r\n */ // グローバル変数として保存するためのヘルパー\nif (!global.threadsStore) {\n    global.threadsStore = [\n        {\n            thread_id: \"1\",\n            title: \"サンプルスレッド1\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            language: \"ja\"\n        },\n        {\n            thread_id: \"2\",\n            title: \"サンプルスレッド2\",\n            created_at: new Date(Date.now() - 86400000).toISOString(),\n            updated_at: new Date(Date.now() - 3600000).toISOString(),\n            language: \"ja\"\n        },\n        {\n            thread_id: \"3\",\n            title: \"プログラミングについての議論\",\n            created_at: new Date(Date.now() - 172800000).toISOString(),\n            updated_at: new Date(Date.now() - 5400000).toISOString(),\n            language: \"ja\"\n        }\n    ];\n}\nif (!global.postsStore) {\n    global.postsStore = {\n        \"1\": [\n            {\n                post_id: \"1_1\",\n                thread_id: \"1\",\n                body: \"最初の投稿です\",\n                anonymous_id: \"匿名123\",\n                created_at: new Date(Date.now() - 3600000).toISOString(),\n                language: \"ja\"\n            },\n            {\n                post_id: \"1_2\",\n                thread_id: \"1\",\n                body: \"返信です\",\n                anonymous_id: \"匿名456\",\n                created_at: new Date().toISOString(),\n                language: \"ja\"\n            }\n        ],\n        \"2\": [\n            {\n                post_id: \"2_1\",\n                thread_id: \"2\",\n                body: \"別のスレッドの投稿です\",\n                anonymous_id: \"匿名789\",\n                created_at: new Date(Date.now() - 2400000).toISOString(),\n                language: \"ja\"\n            }\n        ],\n        \"3\": [\n            {\n                post_id: \"3_1\",\n                thread_id: \"3\",\n                body: \"プログラミングについて話しましょう\",\n                anonymous_id: \"匿名101\",\n                created_at: new Date(Date.now() - 172000000).toISOString(),\n                language: \"ja\"\n            }\n        ]\n    };\n}\n// スレッドデータ保存用配列をエクスポート\nconst threadsStore = global.threadsStore;\n// 投稿データ保存用オブジェクトをエクスポート\nconst postsStore = global.postsStore;\n// 新しいスレッドを追加するユーティリティ関数\nfunction addThread(thread) {\n    // 既存のスレッドを確認（重複追加防止）\n    const existingThread = threadsStore.find((t)=>t.thread_id === thread.thread_id);\n    if (!existingThread) {\n        threadsStore.push({\n            ...thread\n        }); // オブジェクトをコピーして追加\n        console.log(`スレッド追加: ID=${thread.thread_id}, タイトル=\"${thread.title}\"`);\n        console.log(\"現在のスレッド一覧:\", threadsStore.map((t)=>t.thread_id));\n    }\n}\n// 新しい投稿を追加するユーティリティ関数\nfunction addPost(threadId, post) {\n    if (!postsStore[threadId]) {\n        postsStore[threadId] = [];\n    }\n    postsStore[threadId].push({\n        ...post\n    }); // オブジェクトをコピーして追加\n    console.log(`投稿追加: スレッドID=${threadId}, 投稿ID=${post.post_id}`);\n}\n// デバッグ用：データストアの内容を表示\nfunction debugDataStore() {\n    console.log(\"===== データストア内容 =====\");\n    console.log(\"スレッド数:\", threadsStore.length);\n    console.log(\"スレッドID一覧:\", threadsStore.map((t)=>t.thread_id));\n    console.log(\"投稿数:\", Object.keys(postsStore).length);\n    console.log(\"==========================\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/dataStore.js\n");

/***/ }),

/***/ "(api)/./lib/supabaseClient.js":
/*!*******************************!*\
  !*** ./lib/supabaseClient.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n// モックのSupabaseクライアント\n// 実際の環境では@supabase/supabase-jsのcreateClientを使用します\n// モックのsupabaseオブジェクト\nconst supabase = {\n    // データ取得用のモックメソッド\n    from: (table)=>({\n            select: (columns)=>({\n                    eq: ()=>({\n                            single: ()=>Promise.resolve({\n                                    data: null,\n                                    error: {\n                                        message: \"Not implemented in mock\"\n                                    }\n                                }),\n                            order: ()=>Promise.resolve({\n                                    data: [],\n                                    error: null,\n                                    count: 0\n                                })\n                        }),\n                    order: ()=>({\n                            range: ()=>Promise.resolve({\n                                    data: [],\n                                    error: null,\n                                    count: 0\n                                })\n                        })\n                }),\n            insert: (data)=>({\n                    select: ()=>({\n                            single: ()=>Promise.resolve({\n                                    data: null,\n                                    error: {\n                                        message: \"Not implemented in mock\"\n                                    }\n                                })\n                        })\n                }),\n            update: ()=>({\n                    eq: ()=>Promise.resolve({\n                            data: null,\n                            error: null\n                        })\n                })\n        }),\n    // リアルタイム機能のモック\n    channel: (name)=>({\n            on: ()=>({\n                    subscribe: ()=>({\n                            unsubscribe: ()=>{}\n                        })\n                })\n        })\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvc3VwYWJhc2VDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHFCQUFxQjtBQUNyQixrREFBa0Q7QUFFbEQscUJBQXFCO0FBQ2QsTUFBTUEsV0FBVztJQUN0QixpQkFBaUI7SUFDakJDLE1BQU0sQ0FBQ0MsUUFBVztZQUNoQkMsUUFBUSxDQUFDQyxVQUFhO29CQUNwQkMsSUFBSSxJQUFPOzRCQUNUQyxRQUFRLElBQU1DLFFBQVFDLE9BQU8sQ0FBQztvQ0FBRUMsTUFBTTtvQ0FBTUMsT0FBTzt3Q0FBRUMsU0FBUztvQ0FBMEI7Z0NBQUU7NEJBQzFGQyxPQUFPLElBQU1MLFFBQVFDLE9BQU8sQ0FBQztvQ0FBRUMsTUFBTSxFQUFFO29DQUFFQyxPQUFPO29DQUFNRyxPQUFPO2dDQUFFO3dCQUNqRTtvQkFDQUQsT0FBTyxJQUFPOzRCQUNaRSxPQUFPLElBQU1QLFFBQVFDLE9BQU8sQ0FBQztvQ0FBRUMsTUFBTSxFQUFFO29DQUFFQyxPQUFPO29DQUFNRyxPQUFPO2dDQUFFO3dCQUNqRTtnQkFDRjtZQUNBRSxRQUFRLENBQUNOLE9BQVU7b0JBQ2pCTixRQUFRLElBQU87NEJBQ2JHLFFBQVEsSUFBTUMsUUFBUUMsT0FBTyxDQUFDO29DQUFFQyxNQUFNO29DQUFNQyxPQUFPO3dDQUFFQyxTQUFTO29DQUEwQjtnQ0FBRTt3QkFDNUY7Z0JBQ0Y7WUFDQUssUUFBUSxJQUFPO29CQUNiWCxJQUFJLElBQU1FLFFBQVFDLE9BQU8sQ0FBQzs0QkFBRUMsTUFBTTs0QkFBTUMsT0FBTzt3QkFBSztnQkFDdEQ7UUFDRjtJQUVBLGVBQWU7SUFDZk8sU0FBUyxDQUFDQyxPQUFVO1lBQ2xCQyxJQUFJLElBQU87b0JBQ1RDLFdBQVcsSUFBTzs0QkFDaEJDLGFBQWEsS0FBTzt3QkFDdEI7Z0JBQ0Y7UUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly81Y2gvLi9saWIvc3VwYWJhc2VDbGllbnQuanM/NWYwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyDjg6Ljg4Pjgq/jga5TdXBhYmFzZeOCr+ODqeOCpOOCouODs+ODiFxyXG4vLyDlrp/pmpvjga7nkrDlooPjgafjga9Ac3VwYWJhc2Uvc3VwYWJhc2UtanPjga5jcmVhdGVDbGllbnTjgpLkvb/nlKjjgZfjgb7jgZlcclxuXHJcbi8vIOODouODg+OCr+OBrnN1cGFiYXNl44Kq44OW44K444Kn44Kv44OIXHJcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IHtcclxuICAvLyDjg4fjg7zjgr/lj5blvpfnlKjjga7jg6Ljg4Pjgq/jg6Hjgr3jg4Pjg4lcclxuICBmcm9tOiAodGFibGUpID0+ICh7XHJcbiAgICBzZWxlY3Q6IChjb2x1bW5zKSA9PiAoe1xyXG4gICAgICBlcTogKCkgPT4gKHtcclxuICAgICAgICBzaW5nbGU6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiB7IG1lc3NhZ2U6ICdOb3QgaW1wbGVtZW50ZWQgaW4gbW9jaycgfSB9KSxcclxuICAgICAgICBvcmRlcjogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogW10sIGVycm9yOiBudWxsLCBjb3VudDogMCB9KSxcclxuICAgICAgfSksXHJcbiAgICAgIG9yZGVyOiAoKSA9PiAoe1xyXG4gICAgICAgIHJhbmdlOiAoKSA9PiBQcm9taXNlLnJlc29sdmUoeyBkYXRhOiBbXSwgZXJyb3I6IG51bGwsIGNvdW50OiAwIH0pLFxyXG4gICAgICB9KSxcclxuICAgIH0pLFxyXG4gICAgaW5zZXJ0OiAoZGF0YSkgPT4gKHtcclxuICAgICAgc2VsZWN0OiAoKSA9PiAoe1xyXG4gICAgICAgIHNpbmdsZTogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKHsgZGF0YTogbnVsbCwgZXJyb3I6IHsgbWVzc2FnZTogJ05vdCBpbXBsZW1lbnRlZCBpbiBtb2NrJyB9IH0pXHJcbiAgICAgIH0pXHJcbiAgICB9KSxcclxuICAgIHVwZGF0ZTogKCkgPT4gKHtcclxuICAgICAgZXE6ICgpID0+IFByb21pc2UucmVzb2x2ZSh7IGRhdGE6IG51bGwsIGVycm9yOiBudWxsIH0pXHJcbiAgICB9KVxyXG4gIH0pLFxyXG4gIFxyXG4gIC8vIOODquOCouODq+OCv+OCpOODoOapn+iDveOBruODouODg+OCr1xyXG4gIGNoYW5uZWw6IChuYW1lKSA9PiAoe1xyXG4gICAgb246ICgpID0+ICh7XHJcbiAgICAgIHN1YnNjcmliZTogKCkgPT4gKHtcclxuICAgICAgICB1bnN1YnNjcmliZTogKCkgPT4ge31cclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgfSlcclxufTsgIl0sIm5hbWVzIjpbInN1cGFiYXNlIiwiZnJvbSIsInRhYmxlIiwic2VsZWN0IiwiY29sdW1ucyIsImVxIiwic2luZ2xlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJkYXRhIiwiZXJyb3IiLCJtZXNzYWdlIiwib3JkZXIiLCJjb3VudCIsInJhbmdlIiwiaW5zZXJ0IiwidXBkYXRlIiwiY2hhbm5lbCIsIm5hbWUiLCJvbiIsInN1YnNjcmliZSIsInVuc3Vic2NyaWJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/supabaseClient.js\n");

/***/ }),

/***/ "(api)/./lib/translation.js":
/*!****************************!*\
  !*** ./lib/translation.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTranslation: () => (/* binding */ getTranslation),\n/* harmony export */   saveTranslation: () => (/* binding */ saveTranslation),\n/* harmony export */   translateWithDeepL: () => (/* binding */ translateWithDeepL)\n/* harmony export */ });\n/* harmony import */ var _supabaseClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabaseClient.js */ \"(api)/./lib/supabaseClient.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"axios\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([axios__WEBPACK_IMPORTED_MODULE_1__]);\naxios__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n// DeepL API設定\nconst DEEPL_API_URL = \"https://api-free.deepl.com/v2/translate\";\nconst DEEPL_API_KEY = \"3b6926d8-d7fe-0ab5-a139-58078d395af5:fx\" || 0; // 環境変数から取得\n/**\n * DeepL APIを使用してテキストを翻訳する\n * @param {object} params - パラメータ\n * @param {string|string[]} params.text - 翻訳するテキストまたはテキストの配列\n * @param {string} params.targetLang - ターゲット言語コード（'EN'または'JA'）\n * @returns {Promise<string[]>} - 翻訳されたテキストの配列\n */ async function translateWithDeepL({ text, targetLang }) {\n    try {\n        // 言語コードをDeepL形式に変換\n        const formattedLang = targetLang.toUpperCase();\n        // テキストを配列に確実に変換\n        const textArray = Array.isArray(text) ? text : [\n            text\n        ];\n        // 空のテキストはスキップ\n        const filteredTextArray = textArray.filter((t)=>t && t.trim() !== \"\");\n        if (filteredTextArray.length === 0) {\n            return Array.isArray(text) ? [] : [\n                \"\"\n            ];\n        }\n        console.log(`翻訳APIリクエスト: targetLang=${formattedLang}, テキスト数=${filteredTextArray.length}`);\n        // DeepL APIリクエスト\n        const response = await axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].post(DEEPL_API_URL, {\n            text: filteredTextArray,\n            target_lang: formattedLang,\n            source_lang: formattedLang === \"EN\" ? \"JA\" : \"EN\"\n        }, {\n            headers: {\n                \"Authorization\": `DeepL-Auth-Key ${DEEPL_API_KEY}`,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        // レスポンスから翻訳テキストを取り出す\n        const translations = response.data.translations.map((t)=>t.text);\n        // デバッグ出力\n        console.log(`翻訳結果: ${translations.length}件の翻訳が完了`);\n        // 配列またはシングルの値を返す\n        return Array.isArray(text) ? translations : [\n            translations[0] || \"\"\n        ];\n    } catch (error) {\n        console.error(\"DeepL API翻訳エラー:\", error.response?.data || error.message);\n        // エラー時はフォールバック：元のテキストをそのまま返す\n        return Array.isArray(text) ? text : [\n            text\n        ];\n    }\n}\n/**\n * 翻訳をデータベースに保存する\n * @param {string} sourceId - ソースID\n * @param {'thread'|'post'} sourceType - ソースタイプ\n * @param {string} language - 言語コード\n * @param {string} translatedContent - 翻訳されたコンテンツ\n * @returns {Promise} - 保存結果\n */ async function saveTranslation(sourceId, sourceType, language, translatedContent) {\n    try {\n        // Supabaseに翻訳を保存\n        const { data, error } = await _supabaseClient_js__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"translations\").upsert({\n            source_id: sourceId,\n            source_type: sourceType,\n            language,\n            translated_content: translatedContent,\n            created_at: new Date().toISOString()\n        });\n        if (error) throw error;\n        console.log(`翻訳を保存: ${sourceType} ${sourceId} to ${language}`);\n        return {\n            data,\n            error: null\n        };\n    } catch (error) {\n        console.error(\"翻訳保存エラー:\", error);\n        return {\n            data: null,\n            error\n        };\n    }\n}\n/**\n * 翻訳をデータベースから取得する\n * @param {string} sourceId - ソースID\n * @param {'thread'|'post'} sourceType - ソースタイプ\n * @param {string} language - 言語コード\n * @returns {Promise<string|null>} - 保存された翻訳データ\n */ async function getTranslation(sourceId, sourceType, language) {\n    try {\n        // Supabaseから翻訳を取得\n        const { data, error } = await _supabaseClient_js__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"translations\").select(\"translated_content\").eq(\"source_id\", sourceId).eq(\"source_type\", sourceType).eq(\"language\", language).single();\n        if (error) throw error;\n        console.log(`翻訳を取得: ${sourceType} ${sourceId} from ${language}`);\n        return data?.translated_content || null;\n    } catch (error) {\n        console.error(\"翻訳取得エラー:\", error);\n        return null;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/translation.js\n");

/***/ }),

/***/ "(api)/./pages/api/threads/[id].js":
/*!***********************************!*\
  !*** ./pages/api/threads/[id].js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabaseClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../lib/supabaseClient.js */ \"(api)/./lib/supabaseClient.js\");\n/* harmony import */ var _lib_translation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/translation.js */ \"(api)/./lib/translation.js\");\n/* harmony import */ var _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/dataStore.js */ \"(api)/./lib/dataStore.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_translation_js__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_translation_js__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// APIルートハンドラー実行時にデータストアの内容を確認\n(0,_lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.debugDataStore)();\nasync function handler(req, res) {\n    const { method, query } = req;\n    const { id } = query;\n    const lang = query.lang || \"ja\";\n    if (!id || Array.isArray(id)) {\n        return res.status(400).json({\n            error: \"Invalid thread ID\"\n        });\n    }\n    // デバッグ: 現在のスレッド一覧をログ出力\n    console.log(`Looking for thread with ID: ${id}`);\n    console.log(`Current threads in store:`, _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.threadsStore.map((t)=>t.thread_id));\n    switch(method){\n        case \"GET\":\n            try {\n                // スレッドをメモリから取得\n                const thread = _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.threadsStore.find((t)=>t.thread_id === id);\n                if (!thread) {\n                    console.log(`Thread ID ${id} not found in threadsStore`);\n                    // スレッドが見つからない場合は404を返す\n                    return res.status(404).json({\n                        error: \"Thread not found\",\n                        availableThreads: _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.threadsStore.map((t)=>({\n                                id: t.thread_id,\n                                title: t.title\n                            }))\n                    });\n                }\n                // 投稿をメモリから取得\n                const posts = _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.postsStore[id] || [];\n                console.log(`Found posts for thread ${id}:`, posts.length);\n                // 英語翻訳が必要かどうか\n                if (lang === \"en\") {\n                    // スレッドタイトルの翻訳 - 常に新しい翻訳を取得\n                    let threadWithTranslation = {\n                        ...thread\n                    };\n                    try {\n                        const [translatedTitle] = await (0,_lib_translation_js__WEBPACK_IMPORTED_MODULE_1__.translateWithDeepL)({\n                            text: thread.title,\n                            targetLang: \"EN\"\n                        });\n                        // オリジナルのスレッドの翻訳を更新\n                        const originalThread = _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.threadsStore.find((t)=>t.thread_id === id);\n                        if (originalThread) {\n                            originalThread.title_en = translatedTitle;\n                        }\n                        threadWithTranslation.title = translatedTitle;\n                        console.log(`スレッドタイトル翻訳: \"${thread.title}\" -> \"${translatedTitle}\"`);\n                    } catch (error) {\n                        console.error(\"Error translating thread title:\", error);\n                        // エラー時は既存の翻訳を使用\n                        if (thread.title_en) {\n                            threadWithTranslation.title = thread.title_en;\n                        }\n                    }\n                    // 投稿の翻訳 - 常に新しい翻訳を取得\n                    const postsWithTranslation = await Promise.all(posts.map(async (post)=>{\n                        try {\n                            const [translatedBody] = await (0,_lib_translation_js__WEBPACK_IMPORTED_MODULE_1__.translateWithDeepL)({\n                                text: post.body,\n                                targetLang: \"EN\"\n                            });\n                            // オリジナルの投稿の翻訳を更新\n                            const originalPost = _lib_dataStore_js__WEBPACK_IMPORTED_MODULE_2__.postsStore[id]?.find((p)=>p.post_id === post.post_id);\n                            if (originalPost) {\n                                originalPost.body_en = translatedBody;\n                            }\n                            console.log(`投稿翻訳: \"${post.body.substring(0, 20)}...\" -> \"${translatedBody.substring(0, 20)}...\"`);\n                            return {\n                                ...post,\n                                body: translatedBody\n                            };\n                        } catch (error) {\n                            console.error(\"Error translating post body:\", error);\n                            // エラー時は既存の翻訳を使用\n                            if (post.body_en) {\n                                return {\n                                    ...post,\n                                    body: post.body_en\n                                };\n                            }\n                            return post;\n                        }\n                    }));\n                    return res.status(200).json({\n                        thread: threadWithTranslation,\n                        posts: postsWithTranslation\n                    });\n                }\n                return res.status(200).json({\n                    thread,\n                    posts\n                });\n            } catch (error) {\n                console.error(\"Error fetching thread:\", error);\n                return res.status(500).json({\n                    error: \"Internal Server Error\"\n                });\n            }\n            break;\n        default:\n            res.setHeader(\"Allow\", [\n                \"GET\"\n            ]);\n            return res.status(405).json({\n                error: `Method ${method} Not Allowed`\n            });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/threads/[id].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fthreads%2F%5Bid%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cthreads%5C%5Bid%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();